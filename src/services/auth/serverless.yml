service: hex-auth

plugins:
    - serverless-deployment-bucket
    - serverless-plugin-common-excludes
    - serverless-package-external
    - serverless-plugin-include-dependencies

custom:
    # Package External plugin config
    packageExternal:
        external:
            - '../../util/faunaClient.js'
            - '../../util/ssm.js'

    stage: ${opt:stage, self:provider.stage}

package:
    # Exclude Dev Dependencies for default Serverless, since plugin is doing it faster
    excludeDevDependencies: false

provider:
    name: aws
    runtime: nodejs10.x
    stage: dev
    region: us-west-2
    deploymentBucket:
        name: hex-deployment-bucket-${self:custom.stage}
        serverSideEncryption: AES256

    iamRoleStatements:
        # Copy the role statement from file to avoid errors
        ${ file( ../../common-config/faunaKeyRole.yml ) }

    stackTags:
        function: auth

functions:
    preSignup:
        handler: preSignup.main
        memorySize: 256
        environment:
            STAGE: ${self:custom.stage}

    postConfirm:
        handler: postConfirm.main
        memorySize: 256
        environment:
            STAGE: ${self:custom.stage}

resources:
    Description: The Serverless template for deploying Cognito, and Cognito trigger event handlers

    Resources:
        # User Pool
        HexUserPool:
            Type: AWS::Cognito::UserPool
            Properties:
                # Pool name based on stage
                UserPoolName: hex-${self:custom.stage}-user-pool

                UsernameAttributes:
                    - email

                AutoVerifiedAttributes:
                    - email

                Schema:
                    - Name: email
                      AttributeDataType: String
                      Mutable: true
                      Required: true

                    - Name: name
                      AttributeDataType: String
                      Mutable: true
                      Required: true

                # Password Policy
                Policies:
                    PasswordPolicy:
                        MinimumLength: 15
                        RequireLowercase: false
                        RequireNumbers: false
                        RequireSymbols: false
                        RequireUppercase: false

                LambdaConfig:
                    PreSignUp:
                        Fn::GetAtt:
                            - PreSignupLambdaFunction
                            - Arn
                    PostConfirmation:
                        Fn::GetAtt:
                            - PostConfirmLambdaFunction
                            - Arn

        HexWebAppClient:
            Type: AWS::Cognito::UserPoolClient
            Properties:
                # Generate an App Client Name based on stage
                ClientName: hex-${self:custom.stage}-web-app-client
                UserPoolId:
                    Ref: HexUserPool
                GenerateSecret: false

        HexMobileAppClient:
            Type: AWS::Cognito::UserPoolClient
            Properties:
                # Generate an App Client Name based on stage
                ClientName: hex-${self:custom.stage}-mobile-app-client
                UserPoolId:
                    Ref: HexUserPool
                GenerateSecret: false
                RefreshTokenValidity: 3650

        HexPostmanAppClient:
            Type: AWS::Cognito::UserPoolClient
            Properties:
                # Generate an App Client Name based on stage
                ClientName: hex-${self:custom.stage}-postman-app-client
                UserPoolId:
                    Ref: HexUserPool
                GenerateSecret: false
                RefreshTokenValidity: 3650
                ExplicitAuthFlows:
                    - USER_PASSWORD_AUTH

        UserPoolPostConfirmPermission:
            Type: AWS::Lambda::Permission
            Properties:
                Action: lambda:InvokeFunction
                FunctionName:
                    Fn::GetAtt:
                        - PostConfirmLambdaFunction
                        - Arn
                Principal: cognito-idp.amazonaws.com
                SourceArn:
                    Fn::GetAtt:
                        - HexUserPool
                        - Arn

        UserPoolPreSignupPermission:
            Type: AWS::Lambda::Permission
            Properties:
                Action: lambda:InvokeFunction
                FunctionName:
                    Fn::GetAtt:
                        - PreSignupLambdaFunction
                        - Arn
                Principal: cognito-idp.amazonaws.com
                SourceArn:
                    Fn::GetAtt:
                        - HexUserPool
                        - Arn


    # Output, mostly for testing purposes
    Outputs:
        HexUserPoolId:
            Value:
                Ref: HexUserPool
            Export:
                Name: ${self:custom.stage}-hex-user-pool-id